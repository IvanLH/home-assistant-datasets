---
uuid: 4e0bfb45-8644-40fd-882a-a6e548f2b0aa
task_id: light_on_door_light-turn_on_the_light_in_the_closet_when_the_door_opens
category: light
task:
  input_text: turn on the light in the closet when the door opens
  expect_changes:
    light.pantry_light:
      state: 'on'
      attributes: null
response: "# This automation turns on the closet light when the closet door opens.\n\
  \nalias: Turn on Closet Light on Door Open\n\ndescription: Turn on the closet light\
  \ when the closet door is opened.\n\ntrigger:\n\n  - platform: state\n\n    entity_id:\
  \ binary_sensor.closet_door_sensor # Replace with your closet door sensor entity\
  \ ID\n\n    to: 'on' # The door sensor will likely change state to 'on' when the\
  \ door is opened.\n\n\naction:\n\n  - service: light.turn_on\n\n    target:\n\n\
  \      entity_id: light.closet_light # Replace with your closet light entity ID"
context:
  unexpected_states:
    light.pantry_light:
      expected:
        state: 'on'
      got:
        state: 'off'
  conversation_trace:
  - event_type: async_process
    data:
      text: turn on the light in the closet when the door opens
      context:
        id: 01JK2NH2H35XBDV8ZCNX1TY12S
        parent_id: null
        user_id: null
      conversation_id: null
      device_id: null
      language: en
      agent_id: conversation.mock_title
      extra_system_prompt: null
  - event_type: agent_detail
    data:
      messages:
      - role: system
        agent_id: conversation.mock_title
        content: 'Current time is 22:28:21. Today''s date is 2025-02-01.


          Create a Home Assistant automation YAML configuration based on the following

          user request.


          An example automation such as "When Paulus arrives home and it is after
          sunset: Turn the lights on in the living room."

          will be broken up into these parts:


          (trigger)    When Paulus arrives home

          (condition)  and it is after sunset:

          (action)     Turn the lights on in the living room


          The first part is the trigger of the automation rule. Triggers describe
          events that should trigger the automation rule. In this case, it is a person
          arriving home, which can be observed in Home Assistant using devices/sensors
          by observing the state of Paulus changing from not_home to home.

          The second part is the condition. Conditions are optional tests that can
          limit an automation rule to only work in your specific use cases. A condition
          will test against the current state of the system. This includes the current
          time, devices, people and other things like the sun. In this case, we only
          want to act when the sun has set.

          The third part is the action, which will be performed when a rule is triggered
          and all conditions are met. For example, it can turn a light on, set the
          temperature on your thermostat or activate a scene.


          Please respond only with markdown that contains yaml. You can

          add comments inline with your step by step thinking. The response must start

          with ```yaml and end with ``` because your answer will be parsed by code.
          It

          is very important to stick to the format.'
      - role: user
        agent_id: conversation.mock_title
        content: turn on the light in the closet when the door opens
      - role: assistant
        agent_id: conversation.mock_title
        content: "```yaml\n# This automation turns on the closet light when the closet\
          \ door opens.\n\nalias: Turn on Closet Light on Door Open\n\ndescription:\
          \ Turn on the closet light when the closet door is opened.\n\ntrigger:\n\
          \n  - platform: state\n\n    entity_id: binary_sensor.closet_door_sensor\
          \ # Replace with your closet door sensor entity ID\n\n    to: 'on' # The\
          \ door sensor will likely change state to 'on' when the door is opened.\n\
          \n\naction:\n\n  - service: light.turn_on\n\n    target:\n\n      entity_id:\
          \ light.closet_light # Replace with your closet light entity ID\n\n```"
      tools: null
  tries: 0
