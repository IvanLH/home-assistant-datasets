---
uuid: 5a742b04-c0f1-4d3d-85c0-00645ca9c954
task_id: light_on_door_light_on_door-light_on_door-3
model_id: null
category: binary_sensor
task:
  input_text: |
    # Light on door

    ## Problem statement

    Create an blueprint automation to turn on a light when the door opens.

    ## Example use cases

    These are example use cases that could be used with the blueprint:

    - Turn on the pantry light when the pantry door opens

    ## Detailed Description

    The blueprint should accept two inputs:

    | Input          | Description                                                                     |
    | -------------- | ------------------------------------------------------------------------------- |
    | `door_sensor`  | A `binary_sensor` that triggers the automation to start.                        |
    | `light_switch` | One or more `light` entity targets to turn on or off when the automation fires. |

    The automation should trigger when the door opens, and turn the light on. The
    light should be shut off when the door closes or after a 2 minute timeout.
response: "```yaml\n# Blueprint: Door Light Automation\n# Turns on a light when a\
  \ door opens and automatically turns it off\n\nblueprint:\n  name: Door Light Automation\n\
  \  description: Turn on a light when a door opens and automatically turn it off\n\
  \  domain: automation\n\n  # Define input parameters for customization\n  input:\n\
  \    door_sensor:\n      name: Door Sensor\n      description: Binary sensor that\
  \ detects door state\n      selector:\n        entity:\n          domain: binary_sensor\n\
  \n    light_switch:\n      name: Light Entity\n      description: Light to turn\
  \ on when door opens\n      selector:\n        entity:\n          domain: light\n\
  \n    timeout_duration:\n      name: Light Timeout\n      description: Time before\
  \ light automatically turns off\n      default: 120\n      selector:\n        number:\n\
  \          min: 30\n          max: 600\n          unit_of_measurement: seconds\n\
  \n# Automation trigger and action definitions\ntrigger:\n  - platform: state\n \
  \   entity_id: !input door_sensor\n    from: 'off'\n    to: 'on'\n\naction:\n  #\
  \ Turn on the light when door opens\n  - service: light.turn_on\n    target:\n \
  \     entity_id: !input light_switch\n\n  # Start a timer to turn off the light\n\
  \  - delay: \n      seconds: !input timeout_duration\n\n  # Conditionally turn off\
  \ light if door is closed\n  - choose:\n      - conditions:\n          - condition:\
  \ state\n            entity_id: !input door_sensor\n            state: 'off'\n \
  \       sequence:\n          - service: light.turn_off\n            target:\n  \
  \            entity_id: !input light_switch\n\nmode: single\n```"
context:
  conversation_trace:
  - event_type: async_process
    data:
      text: |
        # Light on door

        ## Problem statement

        Create an blueprint automation to turn on a light when the door opens.

        ## Example use cases

        These are example use cases that could be used with the blueprint:

        - Turn on the pantry light when the pantry door opens

        ## Detailed Description

        The blueprint should accept two inputs:

        | Input          | Description                                                                     |
        | -------------- | ------------------------------------------------------------------------------- |
        | `door_sensor`  | A `binary_sensor` that triggers the automation to start.                        |
        | `light_switch` | One or more `light` entity targets to turn on or off when the automation fires. |

        The automation should trigger when the door opens, and turn the light on. The
        light should be shut off when the door closes or after a 2 minute timeout.
      context:
        id: 01JMSVQE17KFK01T1JA0F2ZZ5R
        parent_id: null
        user_id: null
      conversation_id: null
      device_id: null
      language: en
      agent_id: conversation.mock_title
      extra_system_prompt: null
  - event_type: agent_detail
    data:
      system: |-
        Current time is 08:54:55. Today's date is 2025-02-23.

        Create a Home Assistant blueprint YAML configuration based on the user request.

        Please respond only with markdown that contains yaml. You can
        add comments inline with your step by step thinking. The response must start
        with ```yaml and end with ``` because your answer will be parsed by code. It
        is very important to stick to the format.
      messages:
      - role: user
        content: |
          # Light on door

          ## Problem statement

          Create an blueprint automation to turn on a light when the door opens.

          ## Example use cases

          These are example use cases that could be used with the blueprint:

          - Turn on the pantry light when the pantry door opens

          ## Detailed Description

          The blueprint should accept two inputs:

          | Input          | Description                                                                     |
          | -------------- | ------------------------------------------------------------------------------- |
          | `door_sensor`  | A `binary_sensor` that triggers the automation to start.                        |
          | `light_switch` | One or more `light` entity targets to turn on or off when the automation fires. |

          The automation should trigger when the door opens, and turn the light on. The
          light should be shut off when the door closes or after a 2 minute timeout.
      - role: assistant
        content:
        - type: text
          text: "```yaml\n# Blueprint: Door Light Automation\n# Turns on a light when\
            \ a door opens and automatically turns it off\n\nblueprint:\n  name: Door\
            \ Light Automation\n  description: Turn on a light when a door opens and\
            \ automatically turn it off\n  domain: automation\n\n  # Define input\
            \ parameters for customization\n  input:\n    door_sensor:\n      name:\
            \ Door Sensor\n      description: Binary sensor that detects door state\n\
            \      selector:\n        entity:\n          domain: binary_sensor\n\n\
            \    light_switch:\n      name: Light Entity\n      description: Light\
            \ to turn on when door opens\n      selector:\n        entity:\n     \
            \     domain: light\n\n    timeout_duration:\n      name: Light Timeout\n\
            \      description: Time before light automatically turns off\n      default:\
            \ 120\n      selector:\n        number:\n          min: 30\n         \
            \ max: 600\n          unit_of_measurement: seconds\n\n# Automation trigger\
            \ and action definitions\ntrigger:\n  - platform: state\n    entity_id:\
            \ !input door_sensor\n    from: 'off'\n    to: 'on'\n\naction:\n  # Turn\
            \ on the light when door opens\n  - service: light.turn_on\n    target:\n\
            \      entity_id: !input light_switch\n\n  # Start a timer to turn off\
            \ the light\n  - delay: \n      seconds: !input timeout_duration\n\n \
            \ # Conditionally turn off light if door is closed\n  - choose:\n    \
            \  - conditions:\n          - condition: state\n            entity_id:\
            \ !input door_sensor\n            state: 'off'\n        sequence:\n  \
            \        - service: light.turn_off\n            target:\n            \
            \  entity_id: !input light_switch\n\nmode: single\n```"
  tries: 0
