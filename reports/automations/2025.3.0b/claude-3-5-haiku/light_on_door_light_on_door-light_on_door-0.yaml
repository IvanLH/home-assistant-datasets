---
uuid: a7874379-48d2-4f62-bd9d-2c1016e8e103
task_id: light_on_door_light_on_door-light_on_door-0
model_id: null
category: binary_sensor
task:
  input_text: |
    # Light on door

    ## Problem statement

    Create an blueprint automation to turn on a light when the door opens.

    ## Example use cases

    These are example use cases that could be used with the blueprint:

    - Turn on the pantry light when the pantry door opens

    ## Detailed Description

    The blueprint should accept two inputs:

    | Input          | Description                                                                     |
    | -------------- | ------------------------------------------------------------------------------- |
    | `door_sensor`  | A `binary_sensor` that triggers the automation to start.                        |
    | `light_switch` | One or more `light` entity targets to turn on or off when the automation fires. |

    The automation should trigger when the door opens, and turn the light on. The
    light should be shut off when the door closes or after a 2 minute timeout.
response: "```yaml\n# Blueprint Automation: Light Control on Door Open\n# This blueprint\
  \ automates turning on a light when a door opens and managing its state\n\nblueprint:\n\
  \  name: \"Light Control on Door Open\"\n  description: \"Turn on a light when a\
  \ door opens and manage its state\"\n  domain: automation\n  \n  # Define input\
  \ parameters for flexibility and reusability\n  input:\n    door_sensor:\n     \
  \ name: Door Sensor\n      description: \"Binary sensor that detects door state\"\
  \n      selector:\n        entity:\n          domain: binary_sensor\n\n    light_switch:\n\
  \      name: Light Entity\n      description: \"Light to control when door opens\"\
  \n      selector:\n        target:\n          entity:\n            domain: light\n\
  \n    timeout_duration:\n      name: Light Timeout\n      description: \"Duration\
  \ before light automatically turns off\"\n      default: 120\n      selector:\n\
  \        number:\n          min: 0\n          max: 600\n          unit_of_measurement:\
  \ seconds\n\n# Automation definition\ntrigger:\n  # Trigger when door sensor changes\
  \ to 'on' (open)\n  - platform: state\n    entity_id: !input door_sensor\n    from:\
  \ 'off'\n    to: 'on'\n\ncondition: []  # No additional conditions required\n\n\
  action:\n  # Sequence of actions when door opens\n  - service: light.turn_on\n \
  \   target: !input light_switch\n\n  # Optional: Add timer to automatically turn\
  \ off light\n  - delay: \n      seconds: !input timeout_duration\n\n  # Turn off\
  \ light after timeout if door is still closed\n  - condition: \n      condition:\
  \ state\n      entity_id: !input door_sensor\n      state: 'off'\n    \n  - service:\
  \ light.turn_off\n    target: !input light_switch\n\nmode: single\nmax_exceeded:\
  \ silent\n```"
context:
  conversation_trace:
  - event_type: async_process
    data:
      text: |
        # Light on door

        ## Problem statement

        Create an blueprint automation to turn on a light when the door opens.

        ## Example use cases

        These are example use cases that could be used with the blueprint:

        - Turn on the pantry light when the pantry door opens

        ## Detailed Description

        The blueprint should accept two inputs:

        | Input          | Description                                                                     |
        | -------------- | ------------------------------------------------------------------------------- |
        | `door_sensor`  | A `binary_sensor` that triggers the automation to start.                        |
        | `light_switch` | One or more `light` entity targets to turn on or off when the automation fires. |

        The automation should trigger when the door opens, and turn the light on. The
        light should be shut off when the door closes or after a 2 minute timeout.
      context:
        id: 01JMSVPRWMRR3XASNRTPWZTDTS
        parent_id: null
        user_id: null
      conversation_id: null
      device_id: null
      language: en
      agent_id: conversation.mock_title
      extra_system_prompt: null
  - event_type: agent_detail
    data:
      system: |-
        Current time is 08:54:33. Today's date is 2025-02-23.

        Create a Home Assistant blueprint YAML configuration based on the user request.

        Please respond only with markdown that contains yaml. You can
        add comments inline with your step by step thinking. The response must start
        with ```yaml and end with ``` because your answer will be parsed by code. It
        is very important to stick to the format.
      messages:
      - role: user
        content: |
          # Light on door

          ## Problem statement

          Create an blueprint automation to turn on a light when the door opens.

          ## Example use cases

          These are example use cases that could be used with the blueprint:

          - Turn on the pantry light when the pantry door opens

          ## Detailed Description

          The blueprint should accept two inputs:

          | Input          | Description                                                                     |
          | -------------- | ------------------------------------------------------------------------------- |
          | `door_sensor`  | A `binary_sensor` that triggers the automation to start.                        |
          | `light_switch` | One or more `light` entity targets to turn on or off when the automation fires. |

          The automation should trigger when the door opens, and turn the light on. The
          light should be shut off when the door closes or after a 2 minute timeout.
      - role: assistant
        content:
        - type: text
          text: "```yaml\n# Blueprint Automation: Light Control on Door Open\n# This\
            \ blueprint automates turning on a light when a door opens and managing\
            \ its state\n\nblueprint:\n  name: \"Light Control on Door Open\"\n  description:\
            \ \"Turn on a light when a door opens and manage its state\"\n  domain:\
            \ automation\n  \n  # Define input parameters for flexibility and reusability\n\
            \  input:\n    door_sensor:\n      name: Door Sensor\n      description:\
            \ \"Binary sensor that detects door state\"\n      selector:\n       \
            \ entity:\n          domain: binary_sensor\n\n    light_switch:\n    \
            \  name: Light Entity\n      description: \"Light to control when door\
            \ opens\"\n      selector:\n        target:\n          entity:\n     \
            \       domain: light\n\n    timeout_duration:\n      name: Light Timeout\n\
            \      description: \"Duration before light automatically turns off\"\n\
            \      default: 120\n      selector:\n        number:\n          min:\
            \ 0\n          max: 600\n          unit_of_measurement: seconds\n\n# Automation\
            \ definition\ntrigger:\n  # Trigger when door sensor changes to 'on' (open)\n\
            \  - platform: state\n    entity_id: !input door_sensor\n    from: 'off'\n\
            \    to: 'on'\n\ncondition: []  # No additional conditions required\n\n\
            action:\n  # Sequence of actions when door opens\n  - service: light.turn_on\n\
            \    target: !input light_switch\n\n  # Optional: Add timer to automatically\
            \ turn off light\n  - delay: \n      seconds: !input timeout_duration\n\
            \n  # Turn off light after timeout if door is still closed\n  - condition:\
            \ \n      condition: state\n      entity_id: !input door_sensor\n    \
            \  state: 'off'\n    \n  - service: light.turn_off\n    target: !input\
            \ light_switch\n\nmode: single\nmax_exceeded: silent\n```"
  tries: 0
