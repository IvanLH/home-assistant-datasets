---
uuid: 0f19c6dc-4373-4d93-8487-edc19afc7107
task_id: door_left_open_door_left_open-door_left_open-4
category: binary_sensor
task:
  input_text: |
    # Door left open

    ## Problem statement

    Create an blueprint automation to play an alert on the speaker when the door is
    left open.

    ## Example use cases

    These are example use cases that could be used with the blueprint:

    - Play an message on the living room speaker if the garage door has been left open for more than 30 minutes
    - When the front door is ajar for 5 minutes, play a sound on the kitchen bluetooth speaker.

    ## Detailed Description

    The blueprint should accept two inputs:

    | Input           | Selector Type | Description                                                                           |
    | --------------- | ------------- | ------------------------------------------------------------------------------------- |
    | `door_sensor`   | `entity`      | A `binary_sensor` entity selector door sensor that is the target of the automation.   |
    | `alert_media`   | `media`       | The target for the `media` selector for the media player and media id with the alter. |
    | `open_duration` | `duration`    | A `duration` selector, the amount of time before playing the alert.                   |

    The automation should play the selected media when the door has been open for the specified duration.
response: |-
  Here's a Home Assistant blueprint YAML configuration that meets the requirements you've described:

  ```yaml
  # This blueprint creates an automation to play an alert on a speaker when a door is left open for a specified duration.
  blueprint:
    name: Door Left Open Alert
    description: Play an alert on a speaker when a door is left open for too long.
    domain: automation
    input:
      door_sensor:
        name: Door Sensor
        description: Select the door sensor to monitor
        selector:
          entity:
            domain: binary_sensor
            device_class: door
      alert_media:
        name: Alert Media
        description: Select the media player and alert sound to play
        selector:
          media:
      open_duration:
        name: Open Duration
        description: Select the duration after which the alert should be played
        default: "00:05:00"
        selector:
          duration:

  # Define the trigger for the automation
  trigger:
    - platform: state
      entity_id: !input door_sensor
      to: "on"
      for: !input open_duration

  # Define the action to take when the trigger conditions are met
  action:
    - service: media_player.play_media
      target:
        entity_id: !input alert_media.entity_id
      data:
        media_content_id: !input alert_media.media_content_id
        media_content_type: !input alert_media.media_content_type

  # Define the mode of the automation
  mode: single

  # Add a description for the automation
  description: >
    This automation will play an alert on the specified media player when the selected door
    has been left open for the specified duration.

  # Comments on the implementation:
  # 1. We use the `binary_sensor` domain with `device_class: door` for the door sensor input to ensure only door sensors are selectable.
  # 2. The `media` selector is used for the alert_media input, allowing the user to select both the media player and the alert sound.
  # 3. The `duration` selector is used for the open_duration input, with a default value of 5 minutes.
  # 4. The trigger uses the `for` parameter to wait for the specified duration before activating.
  # 5. The action uses the `media_player.play_media` service to play the selected alert on the chosen media player.
  # 6. The automation mode is set to "single" to prevent multiple alerts from being triggered simultaneously.
  ```

  This blueprint configuration creates an automation that will monitor a selected door sensor and play an alert on a specified media player if the door is left open for longer than the specified duration. The blueprint is flexible and can be used for various scenarios, such as those mentioned in your example use cases.
context:
  conversation_trace:
  - event_type: async_process
    data:
      text: |
        # Door left open

        ## Problem statement

        Create an blueprint automation to play an alert on the speaker when the door is
        left open.

        ## Example use cases

        These are example use cases that could be used with the blueprint:

        - Play an message on the living room speaker if the garage door has been left open for more than 30 minutes
        - When the front door is ajar for 5 minutes, play a sound on the kitchen bluetooth speaker.

        ## Detailed Description

        The blueprint should accept two inputs:

        | Input           | Selector Type | Description                                                                           |
        | --------------- | ------------- | ------------------------------------------------------------------------------------- |
        | `door_sensor`   | `entity`      | A `binary_sensor` entity selector door sensor that is the target of the automation.   |
        | `alert_media`   | `media`       | The target for the `media` selector for the media player and media id with the alter. |
        | `open_duration` | `duration`    | A `duration` selector, the amount of time before playing the alert.                   |

        The automation should play the selected media when the door has been open for the specified duration.
      context:
        id: 01JMKFQC8BAVRDJ9T4FVWCAQYK
        parent_id: null
        user_id: null
      conversation_id: null
      device_id: null
      language: en
      agent_id: conversation.mock_title
      extra_system_prompt: null
  - event_type: agent_detail
    data:
      system: |-
        Current time is 21:29:43. Today's date is 2025-02-20.

        Create a Home Assistant blueprint YAML configuration based on the user request.

        Please respond only with markdown that contains yaml. You can
        add comments inline with your step by step thinking. The response must start
        with ```yaml and end with ``` because your answer will be parsed by code. It
        is very important to stick to the format.
      messages:
      - role: user
        content: |
          # Door left open

          ## Problem statement

          Create an blueprint automation to play an alert on the speaker when the door is
          left open.

          ## Example use cases

          These are example use cases that could be used with the blueprint:

          - Play an message on the living room speaker if the garage door has been left open for more than 30 minutes
          - When the front door is ajar for 5 minutes, play a sound on the kitchen bluetooth speaker.

          ## Detailed Description

          The blueprint should accept two inputs:

          | Input           | Selector Type | Description                                                                           |
          | --------------- | ------------- | ------------------------------------------------------------------------------------- |
          | `door_sensor`   | `entity`      | A `binary_sensor` entity selector door sensor that is the target of the automation.   |
          | `alert_media`   | `media`       | The target for the `media` selector for the media player and media id with the alter. |
          | `open_duration` | `duration`    | A `duration` selector, the amount of time before playing the alert.                   |

          The automation should play the selected media when the door has been open for the specified duration.
      - role: assistant
        content:
        - type: text
          text: |-
            Here's a Home Assistant blueprint YAML configuration that meets the requirements you've described:

            ```yaml
            # This blueprint creates an automation to play an alert on a speaker when a door is left open for a specified duration.
            blueprint:
              name: Door Left Open Alert
              description: Play an alert on a speaker when a door is left open for too long.
              domain: automation
              input:
                door_sensor:
                  name: Door Sensor
                  description: Select the door sensor to monitor
                  selector:
                    entity:
                      domain: binary_sensor
                      device_class: door
                alert_media:
                  name: Alert Media
                  description: Select the media player and alert sound to play
                  selector:
                    media:
                open_duration:
                  name: Open Duration
                  description: Select the duration after which the alert should be played
                  default: "00:05:00"
                  selector:
                    duration:

            # Define the trigger for the automation
            trigger:
              - platform: state
                entity_id: !input door_sensor
                to: "on"
                for: !input open_duration

            # Define the action to take when the trigger conditions are met
            action:
              - service: media_player.play_media
                target:
                  entity_id: !input alert_media.entity_id
                data:
                  media_content_id: !input alert_media.media_content_id
                  media_content_type: !input alert_media.media_content_type

            # Define the mode of the automation
            mode: single

            # Add a description for the automation
            description: >
              This automation will play an alert on the specified media player when the selected door
              has been left open for the specified duration.

            # Comments on the implementation:
            # 1. We use the `binary_sensor` domain with `device_class: door` for the door sensor input to ensure only door sensors are selectable.
            # 2. The `media` selector is used for the alert_media input, allowing the user to select both the media player and the alert sound.
            # 3. The `duration` selector is used for the open_duration input, with a default value of 5 minutes.
            # 4. The trigger uses the `for` parameter to wait for the specified duration before activating.
            # 5. The action uses the `media_player.play_media` service to play the selected alert on the chosen media player.
            # 6. The automation mode is set to "single" to prevent multiple alerts from being triggered simultaneously.
            ```

            This blueprint configuration creates an automation that will monitor a selected door sensor and play an alert on a specified media player if the door is left open for longer than the specified duration. The blueprint is flexible and can be used for various scenarios, such as those mentioned in your example use cases.
  tries: 0
eval_result:
  result: false
  message: Automation enttiy id automation.pantry_light_door syntax likely not valid
