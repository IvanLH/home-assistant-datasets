---
uuid: 3e5471c2-b53f-4db8-b69e-7ddd9852f79c
task_id: light_on_door_light_on_door-light_on_door-8
category: valve
task:
  input_text: |2
          # Light on door

          ## Problem statement

          Create an blueprint automation to turn on a light when the door opens.

          ## Example use cases

          These are example use cases that could be used with the blueprint:

          - Turn on the pantry light when the pantry door opens

          ## Detailed Description

          The blueprint should accept two inputs:

          | Input          | Description                                                                     |
          | -------------- | ------------------------------------------------------------------------------- |
          | `door_sensor`  | A `binary_sensor` that triggers the automation to start.                        |
          | `light_switch` | One or more `light` entity targets to turn on or off when the automation fires. |

          The automation should trigger when the door opens, and turn the light on. The
          light should be shut off when the door closes or after a 2 minute timeout.
response: |-
  ```yaml
  alias: Light on Door Opening
  description: Turns on a light when a door opens and off when it closes or after a timeout.
  use_blueprint:
    path: blueprint.yaml
    input:
      door_sensor: binary_sensor.pantry_door
      light_switch: light.pantry_light
  ```
  ```yaml
  blueprint:
    name: Light on Door Opening
    domain: automation
    input:
      door_sensor:
        name: Door Sensor
        description: The binary sensor that triggers the automation.
        selector:
          entity:
            domain: binary_sensor
            device_class: door
      light_switch:
        name: Light Switch
        description: The light to turn on/off.
        selector:
          entity:
            domain: light
            multiple: true
    variables:
      timeout: 120 # 2 minutes in seconds

    action:
      - alias: Turn on light
        trigger:
          - platform: state
            entity_id: !input door_sensor
            from: 'off'
            to: 'on'
        action:
          - service: light.turn_on
            target:
              entity_id: !input light_switch
          - service: homeassistant.delay
            data:
              hours: 0
              minutes: 0
              seconds: !variable timeout
          - alias: Turn off light
            choose:
              - conditions:
                  - condition: state
                    entity_id: !input door_sensor
                    state: 'off'
                sequence:
                  - service: light.turn_off
                    target:
                      entity_id: !input light_switch
              - default:
                  - service: light.turn_off
                    target:
                      entity_id: !input light_switch

  mode: single
  ```
context:
  conversation_trace:
  - event_type: async_process
    data:
      text: |2
              # Light on door

              ## Problem statement

              Create an blueprint automation to turn on a light when the door opens.

              ## Example use cases

              These are example use cases that could be used with the blueprint:

              - Turn on the pantry light when the pantry door opens

              ## Detailed Description

              The blueprint should accept two inputs:

              | Input          | Description                                                                     |
              | -------------- | ------------------------------------------------------------------------------- |
              | `door_sensor`  | A `binary_sensor` that triggers the automation to start.                        |
              | `light_switch` | One or more `light` entity targets to turn on or off when the automation fires. |

              The automation should trigger when the door opens, and turn the light on. The
              light should be shut off when the door closes or after a 2 minute timeout.
      context:
        id: 01JMB4HTKKK30JNPDJVSZK2MSB
        parent_id: null
        user_id: null
      conversation_id: null
      device_id: null
      language: en
      agent_id: conversation.mock_title
      extra_system_prompt: null
  - event_type: agent_detail
    data:
      messages:
      - role: system
        agent_id: conversation.mock_title
        content: |-
          Current time is 15:40:32. Today's date is 2025-02-17.

          Create a Home Assistant blueprint YAML configuration based on the user request.

          Please respond only with markdown that contains yaml. You can
          add comments inline with your step by step thinking. The response must start
          with ```yaml and end with ``` because your answer will be parsed by code. It
          is very important to stick to the format.
      - role: user
        agent_id: conversation.mock_title
        content: |2
                # Light on door

                ## Problem statement

                Create an blueprint automation to turn on a light when the door opens.

                ## Example use cases

                These are example use cases that could be used with the blueprint:

                - Turn on the pantry light when the pantry door opens

                ## Detailed Description

                The blueprint should accept two inputs:

                | Input          | Description                                                                     |
                | -------------- | ------------------------------------------------------------------------------- |
                | `door_sensor`  | A `binary_sensor` that triggers the automation to start.                        |
                | `light_switch` | One or more `light` entity targets to turn on or off when the automation fires. |

                The automation should trigger when the door opens, and turn the light on. The
                light should be shut off when the door closes or after a 2 minute timeout.
      - role: assistant
        agent_id: conversation.mock_title
        content: |-
          ```yaml
          alias: Light on Door Opening
          description: Turns on a light when a door opens and off when it closes or after a timeout.
          use_blueprint:
            path: blueprint.yaml
            input:
              door_sensor: binary_sensor.pantry_door
              light_switch: light.pantry_light
          ```
          ```yaml
          blueprint:
            name: Light on Door Opening
            domain: automation
            input:
              door_sensor:
                name: Door Sensor
                description: The binary sensor that triggers the automation.
                selector:
                  entity:
                    domain: binary_sensor
                    device_class: door
              light_switch:
                name: Light Switch
                description: The light to turn on/off.
                selector:
                  entity:
                    domain: light
                    multiple: true
            variables:
              timeout: 120 # 2 minutes in seconds

            action:
              - alias: Turn on light
                trigger:
                  - platform: state
                    entity_id: !input door_sensor
                    from: 'off'
                    to: 'on'
                action:
                  - service: light.turn_on
                    target:
                      entity_id: !input light_switch
                  - service: homeassistant.delay
                    data:
                      hours: 0
                      minutes: 0
                      seconds: !variable timeout
                  - alias: Turn off light
                    choose:
                      - conditions:
                          - condition: state
                            entity_id: !input door_sensor
                            state: 'off'
                        sequence:
                          - service: light.turn_off
                            target:
                              entity_id: !input light_switch
                      - default:
                          - service: light.turn_off
                            target:
                              entity_id: !input light_switch

          mode: single
          ```
      tools: null
  tries: 0
