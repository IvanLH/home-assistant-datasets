---
uuid: 896bf85f-d03c-48c8-b90a-d45006ec01c9
task_id: light_on_door_light_on_door-light_on_door-4
category: binary_sensor
task:
  input_text: |
    # Light on door

    ## Problem statement

    Create an blueprint automation to turn on a light when the door opens.

    ## Example use cases

    These are example use cases that could be used with the blueprint:

    - Turn on the pantry light when the pantry door opens

    ## Detailed Description

    The blueprint should accept two inputs:

    | Input          | Description                                                                     |
    | -------------- | ------------------------------------------------------------------------------- |
    | `door_sensor`  | A `binary_sensor` that triggers the automation to start.                        |
    | `light_switch` | One or more `light` entity targets to turn on or off when the automation fires. |

    The automation should trigger when the door opens, and turn the light on. The
    light should be shut off when the door closes or after a 2 minute timeout.
response: |-
  ```yaml
  alias: Light on Door
  description: Turn on a light when a door opens, and off when it closes or after a timeout.
  use_blueprint:
    path: blueprint.yaml
    input:
      door_sensor: sensor.pantry_door # Replace with your door sensor
      light_switch: light.pantry_light # Replace with your light(s)
  mode: restart

  #Blueprint
  blueprint:
    name: Light on Door
    domain: automation
    input:
      door_sensor:
        name: Door Sensor
        description: The binary sensor that triggers the automation.
        selector:
          entity:
            domain: binary_sensor
            device_class: door
      light_switch:
        name: Light Switch
        description: The light(s) to turn on/off.
        selector:
          target:
            entity:
              integration: light
      timeout:
        name: Timeout
        description: Time until the light turns off if the door remains open.
        default: 120 # seconds
    variables:
      light_is_on: false

    action:
      - alias: Turn on light when door opens
        trigger:
          - platform: state
            entity_id: !input door_sensor
            from: 'off'
            to: 'on'
        action:
          - service: light.turn_on
            target: !input light_switch
          - variables:
              light_is_on: true
      - alias: Turn off light when door closes
        trigger:
          - platform: state
            entity_id: !input door_sensor
            from: 'on'
            to: 'off'
        condition:
          - condition: state
            entity_id: !input door_sensor
            state: 'off'
        action:
          - service: light.turn_off
            target: !input light_switch
          - variables:
              light_is_on: false
      - alias: Turn off light after timeout
        trigger:
          - platform: time
            at: '00:00:00' #This will run every day at midnight.  Adjust to your needs.
        condition:
          - condition: state
            entity_id: !input door_sensor
            state: 'on'
          - condition: template
            value_template: "{{ is_state('!input door_sensor', 'on') and variables.light_is_on }}"
        action:
          - delay: !input timeout
          - service: light.turn_off
            target: !input light_switch
          - variables:
              light_is_on: false

  ```
context:
  conversation_trace:
  - event_type: async_process
    data:
      text: |
        # Light on door

        ## Problem statement

        Create an blueprint automation to turn on a light when the door opens.

        ## Example use cases

        These are example use cases that could be used with the blueprint:

        - Turn on the pantry light when the pantry door opens

        ## Detailed Description

        The blueprint should accept two inputs:

        | Input          | Description                                                                     |
        | -------------- | ------------------------------------------------------------------------------- |
        | `door_sensor`  | A `binary_sensor` that triggers the automation to start.                        |
        | `light_switch` | One or more `light` entity targets to turn on or off when the automation fires. |

        The automation should trigger when the door opens, and turn the light on. The
        light should be shut off when the door closes or after a 2 minute timeout.
      context:
        id: 01JMKFEVJZ3V2S9M89FFMZESZK
        parent_id: null
        user_id: null
      conversation_id: null
      device_id: null
      language: en
      agent_id: conversation.mock_title
      extra_system_prompt: null
  - event_type: agent_detail
    data:
      messages:
      - role: system
        agent_id: conversation.mock_title
        content: |-
          Current time is 21:25:04. Today's date is 2025-02-20.

          Create a Home Assistant blueprint YAML configuration based on the user request.

          Please respond only with markdown that contains yaml. You can
          add comments inline with your step by step thinking. The response must start
          with ```yaml and end with ``` because your answer will be parsed by code. It
          is very important to stick to the format.
      - role: user
        agent_id: conversation.mock_title
        content: |
          # Light on door

          ## Problem statement

          Create an blueprint automation to turn on a light when the door opens.

          ## Example use cases

          These are example use cases that could be used with the blueprint:

          - Turn on the pantry light when the pantry door opens

          ## Detailed Description

          The blueprint should accept two inputs:

          | Input          | Description                                                                     |
          | -------------- | ------------------------------------------------------------------------------- |
          | `door_sensor`  | A `binary_sensor` that triggers the automation to start.                        |
          | `light_switch` | One or more `light` entity targets to turn on or off when the automation fires. |

          The automation should trigger when the door opens, and turn the light on. The
          light should be shut off when the door closes or after a 2 minute timeout.
      - role: assistant
        agent_id: conversation.mock_title
        content: |-
          ```yaml
          alias: Light on Door
          description: Turn on a light when a door opens, and off when it closes or after a timeout.
          use_blueprint:
            path: blueprint.yaml
            input:
              door_sensor: sensor.pantry_door # Replace with your door sensor
              light_switch: light.pantry_light # Replace with your light(s)
          mode: restart

          #Blueprint
          blueprint:
            name: Light on Door
            domain: automation
            input:
              door_sensor:
                name: Door Sensor
                description: The binary sensor that triggers the automation.
                selector:
                  entity:
                    domain: binary_sensor
                    device_class: door
              light_switch:
                name: Light Switch
                description: The light(s) to turn on/off.
                selector:
                  target:
                    entity:
                      integration: light
              timeout:
                name: Timeout
                description: Time until the light turns off if the door remains open.
                default: 120 # seconds
            variables:
              light_is_on: false

            action:
              - alias: Turn on light when door opens
                trigger:
                  - platform: state
                    entity_id: !input door_sensor
                    from: 'off'
                    to: 'on'
                action:
                  - service: light.turn_on
                    target: !input light_switch
                  - variables:
                      light_is_on: true
              - alias: Turn off light when door closes
                trigger:
                  - platform: state
                    entity_id: !input door_sensor
                    from: 'on'
                    to: 'off'
                condition:
                  - condition: state
                    entity_id: !input door_sensor
                    state: 'off'
                action:
                  - service: light.turn_off
                    target: !input light_switch
                  - variables:
                      light_is_on: false
              - alias: Turn off light after timeout
                trigger:
                  - platform: time
                    at: '00:00:00' #This will run every day at midnight.  Adjust to your needs.
                condition:
                  - condition: state
                    entity_id: !input door_sensor
                    state: 'on'
                  - condition: template
                    value_template: "{{ is_state('!input door_sensor', 'on') and variables.light_is_on }}"
                action:
                  - delay: !input timeout
                  - service: light.turn_off
                    target: !input light_switch
                  - variables:
                      light_is_on: false

          ```
      tools: null
  tries: 0
eval_result:
  result: false
  message: Automation enttiy id automation.pantry_light_door syntax likely not valid
