---
uuid: f50fe5e7-069a-4a67-b6a8-9e908c7bcff2
task_id: door_left_open_door_left_open-door_left_open-0
model_id: null
category: binary_sensor
task:
  input_text: |
    # Door left open

    ## Problem statement

    Create an blueprint automation to play an alert on the speaker when the door is
    left open.

    ## Example use cases

    These are example use cases that could be used with the blueprint:

    - Play an message on the living room speaker if the garage door has been left open for more than 30 minutes
    - When the front door is ajar for 5 minutes, play a sound on the kitchen bluetooth speaker.

    ## Detailed Description

    The blueprint should accept two inputs:

    | Input           | Selector Type | Description                                                                           |
    | --------------- | ------------- | ------------------------------------------------------------------------------------- |
    | `door_sensor`   | `entity`      | A `binary_sensor` entity selector door sensor that is the target of the automation.   |
    | `alert_media`   | `media`       | The target for the `media` selector for the media player and media id with the alter. |
    | `open_duration` | `duration`    | A `duration` selector, the amount of time before playing the alert.                   |

    The automation should play the selected media when the door has been open for the specified duration.
response: |-
  ```yaml
  blueprint:
    name: Door Left Open Alert
    description: Plays an alert when a door has been left open for a specified duration.
    domain: automation
    input:
      door_sensor:
        name: Door Sensor
        description: Binary sensor that tracks the state of the door.
        selector:
          entity:
            domain: binary_sensor
      alert_media:
        name: Alert Media
        description: Media player and media ID to play the alert through.
        selector:
          media:
      open_duration:
        name: Open Duration
        description: Amount of time the door can be open before the alert is triggered.
        selector:
          duration: {}
    trigger:
      platform: state
      entity_id: !input door_sensor
      to: 'open'
    condition:
      condition: time
      after: '{{ now().timestamp() - as_timestamp(trigger.to_state.last_changed) > as_timestamp(open_duration) }}'
    action:
      service: media_player.play_media
      target: !input alert_media
      data:
        media_content_id: !input alert_media
        media_content_type: music
  ```

  The key elements of this blueprint are:

  1. The `input` section defines the required configuration options for the automation:
     - `door_sensor`: A binary sensor that tracks the state of the door.
     - `alert_media`: The media player and media ID to play the alert through.
     - `open_duration`: The amount of time the door can be open before the alert is triggered.

  2. The `trigger` section listens for the door sensor to change to the 'open' state.

  3. The `condition` section checks if the door has been open for longer than the specified `open_duration`.

  4. The `action` section plays the specified media on the target media player when the condition is met.

  This blueprint can be used to set up alerts for various door sensors, with customizable alert media and open duration thresholds.
context:
  conversation_trace:
  - event_type: async_process
    data:
      text: |
        # Door left open

        ## Problem statement

        Create an blueprint automation to play an alert on the speaker when the door is
        left open.

        ## Example use cases

        These are example use cases that could be used with the blueprint:

        - Play an message on the living room speaker if the garage door has been left open for more than 30 minutes
        - When the front door is ajar for 5 minutes, play a sound on the kitchen bluetooth speaker.

        ## Detailed Description

        The blueprint should accept two inputs:

        | Input           | Selector Type | Description                                                                           |
        | --------------- | ------------- | ------------------------------------------------------------------------------------- |
        | `door_sensor`   | `entity`      | A `binary_sensor` entity selector door sensor that is the target of the automation.   |
        | `alert_media`   | `media`       | The target for the `media` selector for the media player and media id with the alter. |
        | `open_duration` | `duration`    | A `duration` selector, the amount of time before playing the alert.                   |

        The automation should play the selected media when the door has been open for the specified duration.
      context:
        id: 01JMTAFP1E9A677SWAXGEBBQ2A
        parent_id: null
        user_id: null
      conversation_id: null
      device_id: null
      language: en
      agent_id: conversation.mock_title
      extra_system_prompt: null
  - event_type: agent_detail
    data:
      system: |-
        Current time is 13:12:49. Today's date is 2025-02-23.

        Create a Home Assistant blueprint YAML configuration based on the user request.

        Please respond only with markdown that contains yaml. You can
        add comments inline with your step by step thinking. The response must start
        with ```yaml and end with ``` because your answer will be parsed by code. It
        is very important to stick to the format.
      messages:
      - role: user
        content: |
          # Door left open

          ## Problem statement

          Create an blueprint automation to play an alert on the speaker when the door is
          left open.

          ## Example use cases

          These are example use cases that could be used with the blueprint:

          - Play an message on the living room speaker if the garage door has been left open for more than 30 minutes
          - When the front door is ajar for 5 minutes, play a sound on the kitchen bluetooth speaker.

          ## Detailed Description

          The blueprint should accept two inputs:

          | Input           | Selector Type | Description                                                                           |
          | --------------- | ------------- | ------------------------------------------------------------------------------------- |
          | `door_sensor`   | `entity`      | A `binary_sensor` entity selector door sensor that is the target of the automation.   |
          | `alert_media`   | `media`       | The target for the `media` selector for the media player and media id with the alter. |
          | `open_duration` | `duration`    | A `duration` selector, the amount of time before playing the alert.                   |

          The automation should play the selected media when the door has been open for the specified duration.
      - role: assistant
        content:
        - type: text
          text: |-
            ```yaml
            blueprint:
              name: Door Left Open Alert
              description: Plays an alert when a door has been left open for a specified duration.
              domain: automation
              input:
                door_sensor:
                  name: Door Sensor
                  description: Binary sensor that tracks the state of the door.
                  selector:
                    entity:
                      domain: binary_sensor
                alert_media:
                  name: Alert Media
                  description: Media player and media ID to play the alert through.
                  selector:
                    media:
                open_duration:
                  name: Open Duration
                  description: Amount of time the door can be open before the alert is triggered.
                  selector:
                    duration: {}
              trigger:
                platform: state
                entity_id: !input door_sensor
                to: 'open'
              condition:
                condition: time
                after: '{{ now().timestamp() - as_timestamp(trigger.to_state.last_changed) > as_timestamp(open_duration) }}'
              action:
                service: media_player.play_media
                target: !input alert_media
                data:
                  media_content_id: !input alert_media
                  media_content_type: music
            ```

            The key elements of this blueprint are:

            1. The `input` section defines the required configuration options for the automation:
               - `door_sensor`: A binary sensor that tracks the state of the door.
               - `alert_media`: The media player and media ID to play the alert through.
               - `open_duration`: The amount of time the door can be open before the alert is triggered.

            2. The `trigger` section listens for the door sensor to change to the 'open' state.

            3. The `condition` section checks if the door has been open for longer than the specified `open_duration`.

            4. The `action` section plays the specified media on the target media player when the condition is met.

            This blueprint can be used to set up alerts for various door sensors, with customizable alert media and open duration thresholds.
  tries: 0
