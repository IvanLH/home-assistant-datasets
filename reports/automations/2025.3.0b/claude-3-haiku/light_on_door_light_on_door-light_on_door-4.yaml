---
uuid: 12247c1d-93c0-4d67-a5cc-063caf7deee4
task_id: light_on_door_light_on_door-light_on_door-4
model_id: null
category: binary_sensor
task:
  input_text: |
    # Light on door

    ## Problem statement

    Create an blueprint automation to turn on a light when the door opens.

    ## Example use cases

    These are example use cases that could be used with the blueprint:

    - Turn on the pantry light when the pantry door opens

    ## Detailed Description

    The blueprint should accept two inputs:

    | Input          | Description                                                                     |
    | -------------- | ------------------------------------------------------------------------------- |
    | `door_sensor`  | A `binary_sensor` that triggers the automation to start.                        |
    | `light_switch` | One or more `light` entity targets to turn on or off when the automation fires. |

    The automation should trigger when the door opens, and turn the light on. The
    light should be shut off when the door closes or after a 2 minute timeout.
response: |-
  ```yaml
  blueprint:
    name: Turn on light when door opens
    description: Turn on a light when a door is opened and turn it off after a timeout or when the door is closed.
    domain: automation
    input:
      door_sensor:
        name: Door Sensor
        description: Binary sensor that detects when the door is opened/closed
        selector:
          entity:
            domain: binary_sensor
      light_switch:
        name: Light
        description: Light entity(ies) to turn on/off
        selector:
          target:
            entity:
              domain: light

  trigger:
    - platform: state
      entity_id: !input door_sensor
      to: 'open'

  action:
    - service: light.turn_on
      target:
        entity_id: !input light_switch

    - wait_for_trigger:
        - platform: state
          entity_id: !input door_sensor
          to: 'closed'
        - platform: time
          minutes: 2

    - service: light.turn_off
      target:
        entity_id: !input light_switch
  ```

  The blueprint takes two inputs: `door_sensor` and `light_switch`. The `door_sensor` is a binary sensor that detects when the door is opened or closed. The `light_switch` is the light entity(ies) to turn on or off.

  The automation triggers when the `door_sensor` changes to the 'open' state. It then turns on the `light_switch`.

  The automation then waits for either the `door_sensor` to change to the 'closed' state, or for 2 minutes to pass. Once one of these conditions is met, the automation turns off the `light_switch`.

  This allows the light to be turned on when the door opens, and turned off either when the door closes or after a 2 minute timeout.
context:
  conversation_trace:
  - event_type: async_process
    data:
      text: |
        # Light on door

        ## Problem statement

        Create an blueprint automation to turn on a light when the door opens.

        ## Example use cases

        These are example use cases that could be used with the blueprint:

        - Turn on the pantry light when the pantry door opens

        ## Detailed Description

        The blueprint should accept two inputs:

        | Input          | Description                                                                     |
        | -------------- | ------------------------------------------------------------------------------- |
        | `door_sensor`  | A `binary_sensor` that triggers the automation to start.                        |
        | `light_switch` | One or more `light` entity targets to turn on or off when the automation fires. |

        The automation should trigger when the door opens, and turn the light on. The
        light should be shut off when the door closes or after a 2 minute timeout.
      context:
        id: 01JMTAFJ3N8ZASV7071SJV98W9
        parent_id: null
        user_id: null
      conversation_id: null
      device_id: null
      language: en
      agent_id: conversation.mock_title
      extra_system_prompt: null
  - event_type: agent_detail
    data:
      system: |-
        Current time is 13:12:45. Today's date is 2025-02-23.

        Create a Home Assistant blueprint YAML configuration based on the user request.

        Please respond only with markdown that contains yaml. You can
        add comments inline with your step by step thinking. The response must start
        with ```yaml and end with ``` because your answer will be parsed by code. It
        is very important to stick to the format.
      messages:
      - role: user
        content: |
          # Light on door

          ## Problem statement

          Create an blueprint automation to turn on a light when the door opens.

          ## Example use cases

          These are example use cases that could be used with the blueprint:

          - Turn on the pantry light when the pantry door opens

          ## Detailed Description

          The blueprint should accept two inputs:

          | Input          | Description                                                                     |
          | -------------- | ------------------------------------------------------------------------------- |
          | `door_sensor`  | A `binary_sensor` that triggers the automation to start.                        |
          | `light_switch` | One or more `light` entity targets to turn on or off when the automation fires. |

          The automation should trigger when the door opens, and turn the light on. The
          light should be shut off when the door closes or after a 2 minute timeout.
      - role: assistant
        content:
        - type: text
          text: |-
            ```yaml
            blueprint:
              name: Turn on light when door opens
              description: Turn on a light when a door is opened and turn it off after a timeout or when the door is closed.
              domain: automation
              input:
                door_sensor:
                  name: Door Sensor
                  description: Binary sensor that detects when the door is opened/closed
                  selector:
                    entity:
                      domain: binary_sensor
                light_switch:
                  name: Light
                  description: Light entity(ies) to turn on/off
                  selector:
                    target:
                      entity:
                        domain: light

            trigger:
              - platform: state
                entity_id: !input door_sensor
                to: 'open'

            action:
              - service: light.turn_on
                target:
                  entity_id: !input light_switch

              - wait_for_trigger:
                  - platform: state
                    entity_id: !input door_sensor
                    to: 'closed'
                  - platform: time
                    minutes: 2

              - service: light.turn_off
                target:
                  entity_id: !input light_switch
            ```

            The blueprint takes two inputs: `door_sensor` and `light_switch`. The `door_sensor` is a binary sensor that detects when the door is opened or closed. The `light_switch` is the light entity(ies) to turn on or off.

            The automation triggers when the `door_sensor` changes to the 'open' state. It then turns on the `light_switch`.

            The automation then waits for either the `door_sensor` to change to the 'closed' state, or for 2 minutes to pass. Once one of these conditions is met, the automation turns off the `light_switch`.

            This allows the light to be turned on when the door opens, and turned off either when the door closes or after a 2 minute timeout.
  tries: 0
