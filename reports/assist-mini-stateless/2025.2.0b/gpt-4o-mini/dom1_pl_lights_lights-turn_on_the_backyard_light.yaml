---
uuid: 40675f80-bf10-4866-b7b1-92e0e8a95660
task_id: dom1_pl_lights_lights-turn_on_the_backyard_light
category: light
task:
  input_text: Turn on the Backyard light
  expect_changes:
    light.garden_light:
      state: 'on'
      attributes:
        brightness: 0
        color_mode: brightness
response: It seems there is no "Backyard Light" listed in your smart home devices.
  Would you like to turn on a different light or check for a specific area?
context:
  unexpected_states:
    light.garden_light:
      expected:
        color_mode: brightness
        brightness: 0
        state: 'on'
      got:
        color_mode: null
        brightness: null
        state: 'off'
  conversation_trace:
  - event_type: async_process
    data:
      text: Turn on the Backyard light
      context:
        id: 01JJZYTMGN55PYHK45AX417AW1
        parent_id: null
        user_id: null
      conversation_id: null
      device_id: null
      language: en
      agent_id: conversation.mock_title
      extra_system_prompt: null
  - event_type: agent_detail
    data:
      messages:
      - role: system
        agent_id: conversation.mock_title
        content: "Current time is 21:13:08. Today's date is 2025-01-31.\nYou are a\
          \ voice assistant for Home Assistant.\nAnswer questions about the world\
          \ truthfully.\nAnswer in plain text. Keep it simple and to the point.\n\
          When controlling Home Assistant always call the intent tools. Use HassTurnOn\
          \ to lock and HassTurnOff to unlock a lock. When controlling a device, prefer\
          \ passing just name and domain. When controlling an area, prefer passing\
          \ just area name and domain.\nWhen a user asks to turn on all devices of\
          \ a specific type, ask user to specify an area, unless there is only one\
          \ device of that type.\nThis device is not able to start timers.\nAn overview\
          \ of the areas and the devices in this smart home:\n- names: Kitchen Light\n\
          \  domain: light\n- names: Living Room Light\n  domain: light\n- names:\
          \ Dining Room Light\n  domain: light\n- names: Bedroom 1 Light\n  domain:\
          \ light\n- names: Bedroom 2 Light\n  domain: light\n- names: Bedroom 3 Light\n\
          \  domain: light\n- names: Bedroom 4 Light\n  domain: light\n- names: Garden\
          \ Light\n  domain: light\n"
      - role: user
        agent_id: conversation.mock_title
        content: Turn on the Backyard light
      - role: assistant
        agent_id: conversation.mock_title
        content: It seems there is no "Backyard Light" listed in your smart home devices.
          Would you like to turn on a different light or check for a specific area?
      tools:
      - name: HassTurnOn
        description: Turns on/opens a device or entity
        parameters: '{Any(''name'', ''area'', ''floor'', msg=None): <function non_empty_string
          at 0x7f42212ff4c0>, ''domain'': All(<function ensure_list at 0x7f4222f8d800>,
          [<function string at 0x7f4222f8ee80>], msg=None), ''device_class'': All(<function
          ensure_list at 0x7f4222f8d800>, [In([''tv'', ''speaker'', ''receiver'',
          ''awning'', ''blind'', ''curtain'', ''damper'', ''door'', ''garage'', ''gate'',
          ''shade'', ''shutter'', ''window'', ''outlet'', ''switch'', ''water'', ''gas''])],
          msg=None)}'
      - name: HassTurnOff
        description: Turns off/closes a device or entity
        parameters: '{Any(''name'', ''area'', ''floor'', msg=None): <function non_empty_string
          at 0x7f42212ff4c0>, ''domain'': All(<function ensure_list at 0x7f4222f8d800>,
          [<function string at 0x7f4222f8ee80>], msg=None), ''device_class'': All(<function
          ensure_list at 0x7f4222f8d800>, [In([''tv'', ''speaker'', ''receiver'',
          ''awning'', ''blind'', ''curtain'', ''damper'', ''door'', ''garage'', ''gate'',
          ''shade'', ''shutter'', ''window'', ''outlet'', ''switch'', ''water'', ''gas''])],
          msg=None)}'
      - name: HassGetState
        description: Gets or checks the state of a device or entity
        parameters: '{Any(''name'', ''area'', ''floor'', msg=None): <function string
          at 0x7f4222f8ee80>, ''domain'': All(<function ensure_list at 0x7f4222f8d800>,
          [<function string at 0x7f4222f8ee80>], msg=None), ''device_class'': All(<function
          ensure_list at 0x7f4222f8d800>, [<function string at 0x7f4222f8ee80>], msg=None),
          ''state'': All(<function ensure_list at 0x7f4222f8d800>, [<function string
          at 0x7f4222f8ee80>], msg=None)}'
      - name: HassCancelAllTimers
        description: Cancels all timers
        parameters: '{''area'': <function string at 0x7f4222f8ee80>}'
      - name: HassLightSet
        description: Sets the brightness or color of a light
        parameters: '{Any(''name'', ''area'', ''floor'', msg=None): <function non_empty_string
          at 0x7f42212ff4c0>, ''domain'': All(<function ensure_list at 0x7f4222f8d800>,
          [<function string at 0x7f4222f8ee80>], msg=None), ''color'': <function color_name_to_rgb
          at 0x7f42213d4cc0>, ''temperature'': All(Coerce(int, msg=None), Range(min=0,
          max=None, min_included=True, max_included=True, msg=None), msg=None), ''brightness'':
          All(Coerce(int, msg=None), Range(min=0, max=100, min_included=True, max_included=True,
          msg=None), msg=None)}'
  tries: 0
